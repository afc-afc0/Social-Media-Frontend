[{"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\index.js":"1","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\App.js":"2","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\pages\\UserSignUpPage.js":"4","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\api\\apiCalls.js":"5","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\components\\input.js":"6","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\pages\\UserLoginPage.js":"7"},{"size":654,"mtime":1636664016602,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3063,"mtime":1636660824529,"results":"12","hashOfConfig":"9"},{"size":210,"mtime":1636664372087,"results":"13","hashOfConfig":"9"},{"size":499,"mtime":1636328722843,"results":"14","hashOfConfig":"9"},{"size":1368,"mtime":1636664797788,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"74om2h",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\index.js",[],"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\App.js",[],["32","33"],"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\pages\\UserSignUpPage.js",["34","35"],"import React from \"react\";\r\nimport { signup } from \"../api/apiCalls\";\r\nimport Input from \"../components/input\";\r\nclass UserSignUpPage extends React.Component{\r\n\r\n    state = {//Comes from React.components\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null,\r\n        pendingApiCall: false,\r\n        errors:{\r\n\r\n        }\r\n    };\r\n  \r\n\r\n    onChange = event => {\r\n        const { name, value} = event.target\r\n        const errors = {...this.state.errors};\r\n        errors[name] = undefined;\r\n\r\n        if (name === \"password\" || name === \"passwordRepeat\") \r\n            if (name === \"password\" && value !==  this.state.passwordRepeat)\r\n                errors.passwordRepeat = 'Password mismatch'\r\n            else if (name === \"passwordRepeat\" && value != this.state.password)\r\n                errors.passwordRepeat = \"Password mismatch\";\r\n            else\r\n                errors.passwordRepeat = undefined;\r\n        \r\n        this.setState({\r\n            [name]: value,\r\n            errors\r\n        })\r\n    }\r\n    \r\n    onClickSignUp = async event =>{\r\n        event.preventDefault();//We block browser\r\n\r\n        const { username, displayName, password} = this.state;\r\n\r\n        const body = {\r\n            username,\r\n            displayName,\r\n            password,\r\n        };\r\n\r\n        this.setState({pendingApiCall: true});\r\n        \r\n        try{\r\n            const response = await signup(body);\r\n        }catch (error){\r\n            if (error.response.data.validationErrors)// we dont want to set errors to null\r\n                this.setState({errors: error.response.data.validationErrors});\r\n        }\r\n        this.setState({pendingApiCall: false});\r\n    }\r\n\r\n    render(){\r\n        const { pendingApiCall, errors } = this.state;// we dont want to use this.state.pendingApiCall everytime\r\n        const { username, displayName, password, passwordRepeat} = errors;\r\n        return(\r\n        <div className = \"container\">\r\n            <form className=\"needs-validation\">\r\n                <h1 className=\"text-center\">Sign Up Page</h1>\r\n                <Input name=\"username\" label=\"Username\" error={username} onChange={this.onChange}/>\r\n                <Input name=\"displayName\" label=\"Display Name\" error={displayName} onChange={this.onChange}/>\r\n                <Input name=\"password\" label=\"Password\" error={password} onChange={this.onChange} type=\"password\"/>\r\n                <Input name=\"passwordRepeat\" label=\"Password Repeat\" error={passwordRepeat} onChange={this.onChange} type=\"password\"/>\r\n                <div className=\"spacer5\"></div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"btn btn-secondary\" onClick={this.onClickSignUp} disabled={pendingApiCall || passwordRepeat !== undefined}>\r\n                    {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"></span>} Sign Up \r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserSignUpPage;","C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\api\\apiCalls.js",[],"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\components\\input.js",[],"C:\\Users\\ahmet\\Desktop\\Spring\\SpringReact\\frontend\\src\\pages\\UserLoginPage.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":26,"column":57,"nodeType":"42","messageId":"43","endLine":26,"endColumn":59},{"ruleId":"44","severity":1,"message":"45","line":51,"column":19,"nodeType":"46","messageId":"47","endLine":51,"endColumn":27},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]